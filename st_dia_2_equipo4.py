# -*- coding: utf-8 -*-
"""ST_Dia_2_Equipo4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11z4ORf0foGVVCU_PX7stHN0x8xba7RvU

**Pandas**

**1. Importar librería pandas**
"""

import pandas as pd

"""**2. Cargar la base de datos que se trabajará**"""

tabla = pd.read_csv("songs_normalize.csv") # campos: artist, song, duration_ms, explicit, year, popularity, danceability, energy, key, loudness, mode, speechiness,acousticness, instrumentaliness, liveness, valence, tempo, genre

from google.colab import drive
drive.mount('/content/drive')

"""**3. Observa las primeras líneas usando la función head**"""

print(tabla.head(5))

"""**Extracción de información por columna**
*   Artist
*   Song
*   Year
*   Popularity
*   Genre
"""

artist = tabla['artist']
song = tabla['song']
year = tabla['year']
popularity = tabla['popularity']
genre = tabla['genre']

tabla2 = {
    "artist": artist,
    "song": song,
    "year": year,
    "popularity": popularity,
    "genre": genre
}
tabla2 = pd.DataFrame(tabla2)
tabla2

"""**4. Verifica la cantidad de datos que tienes, las variables que contiene el vector de datos e identifica el tipo de variables**"""

tabla2.count()

from pandas.core.arrays.sparse import dtype
print(tabla2['artist'].dtypes)
print(tabla2['song'].dtypes)
print(tabla2['year'].dtypes)
print(tabla2['popularity'].dtypes)
print(tabla2['genre'].dtypes)

"""**5. Analiza las variables para saber qué representa cada una y en qué rangos se encuentran**

La variable "Artist" representa al artista o grupo musical de cada canción.

La variable "Song" representa la canción que produjo el artista.

La variable "Year" representa el año en que se publicó la canción.

La variable "Popularity" representa en número máximo de popularidad que alcanzó la canción en un periodo de tiempo, siendo 0 el número de mayor popularidad.

La variable "Genre" representa el género de las canciones.
"""

print("El rango de los años es:", year.max()-year.min())
print("El rango de la popularidad es:", popularity.max()-popularity.min())

"""**6. Obtén diferentes combinaciones de columnas y datos**"""

tabla2['Comparación por género'] = tabla2['artist'] + " " + tabla2['song'] + " " + tabla2['genre']

tabla2['Comparación por popularidad'] = tabla2['artist'] + " " + tabla2['song'] + " " + str(tabla2['popularity'])

tabla2['Comparación por año'] = tabla2['artist'] + " " + tabla2['song'] + " " + str(tabla2['year'])
print(tabla2.head(5))

"""**7. Revisa los datos obtenidos por la función describe**"""

tabla2.dropna(inplace=True)
print(tabla2.describe())

"""**8. Basándose en la media, mediana y desviación estándar de cada variable, qué conclusiones puedes entregar de datos**

Debido al tipo de nuestros datos, solo utilizamos las variables año y popularidad para analizar lo que se pide, ya que las demás variables a analizar son de tipo 'string'.
"""

import statistics as stat

print("ANÁLISIS RESPECTO AL AÑO")
print("En la base de datos hay más canciones del año:",stat.mean(year)) # Media
print("La mediana de los años es:",stat.median(year)) # Mediana
print("La dispersión de los años con respecto a la media es:",stat.stdev(year),"\n") # Desviación estándar

print("ANÁLISIS RESPECTO A LA POPULARIDAD")
print("El promedio de la popularidad de las canciones es:",stat.mean(popularity)) 
print("La mediana de la popularidad es:",stat.median(popularity))
print("La dispersión de la popularidad con respecto a la media es:",stat.stdev(popularity))